# Generated by Django 2.2.3 on 2019-08-09 10:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('p_id', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='PubMed ID')),
                ('article_name', models.CharField(max_length=255, verbose_name='Article')),
                ('journal', models.CharField(max_length=255)),
                ('pub_time', models.DateField(verbose_name='Published Time')),
                ('up_user', models.CharField(max_length=20, verbose_name='Upload User')),
            ],
        ),
        migrations.CreateModel(
            name='CellType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('s_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_summary', models.TextField(null=True, verbose_name='Summary')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasearch.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_class', models.CharField(choices=[('TCD', 'T cell development'), ('RDA', 'Retina and dark adaptation'), ('DN', 'Decidua NK'), ('AD', 'Autoimmune disease'), ('MI', 'Mitosis'), ('BT', 'Brain tumor'), ('OT', 'Others')], max_length=3)),
                ('species', models.CharField(max_length=50)),
                ('ani_model', models.CharField(choices=[('DM', 'Disease Model'), ('AM', 'Animal Model'), ('MO', 'Model Organism')], max_length=2, verbose_name='Disease/Animal Model/Model Organism')),
                ('disease_organ', models.CharField(max_length=50, verbose_name='Disease Type/Organ Type')),
                ('data_type', models.CharField(choices=[('scRNA', 'Single-cell RNA'), ('scATAC', 'Single-cell ATAC'), ('bkRNA', 'Bulk RNA'), ('bkATAC', 'Bulk ATAC'), ('bkChip', 'Bulk Chip')], max_length=6, verbose_name='Data Type')),
                ('tech_type', models.CharField(max_length=20, null=True, verbose_name='Sequencing Technology')),
                ('seq_platform', models.CharField(max_length=20, null=True, verbose_name='Sequencing Platform')),
                ('n_samples', models.CharField(max_length=20, null=True, verbose_name='Number of Cells or Samples')),
                ('data_format', models.CharField(max_length=10, verbose_name='Data Format')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasearch.Article')),
                ('cell_type', models.ManyToManyField(to='datasearch.CellType', verbose_name='Cell Type')),
            ],
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control', models.BooleanField(verbose_name='Whether the experiment has control samples?')),
                ('sample', models.BooleanField(verbose_name='Whether each cell or data has sample information?')),
                ('gender', models.BooleanField(verbose_name='Whether the data has gender annotation?')),
                ('age', models.BooleanField(verbose_name='Whether the data has age annotation?')),
                ('clinical', models.BooleanField(verbose_name='Whether the data has clinical information annotation?')),
                ('summary', models.TextField(null=True)),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='datasearch.Article')),
            ],
        ),
    ]
